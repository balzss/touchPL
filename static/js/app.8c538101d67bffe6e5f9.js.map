{"version":3,"sources":["webpack:///static/js/app.8c538101d67bffe6e5f9.js","webpack:///./src/main.js"],"names":["webpackJsonp","7","module","__webpack_exports__","__webpack_require__","checkTime","i","startTime","today","Date","h","getHours","m","getMinutes","document","getElementById","innerHTML","t","setTimeout","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_vue__","acorn","ace","config","productionTip","component","props","template","methods","isME","this","callee","type","isFE","getName","property","name","ast","parse","app","el","data","astBody","compile","x","body","editor","edit","$blockScrolling","Infinity","on","$data","getValue","error","console","log","setTheme","getSession","setMode","setUseWrapMode","setValue","setUseWorker","setHighlightActiveLine"],"mappings":"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","file":"static/js/app.8c538101d67bffe6e5f9.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 7:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(6);\n// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n\nconst acorn = __webpack_require__(2);\nconst ace = __webpack_require__(3);\n__webpack_require__(4);\n__webpack_require__(5);\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('BlockStatement', {\n    props: ['props'],\n    template: '<div>' + '<component :is=\"node.type\" v-for=\"node in props.body\" :props=\"node\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('VariableDeclaration', {\n    props: ['props'],\n    template: '<div>' + '<div class=\"header card teal\" v-for=\"d in props.declarations\"><span class=\"scnd\">var </span>{{ d.id.name }} ' + '<component :is=\"d.init.type\" :props=\"d.init\" v-if=\"d.init\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('EmptyStatement', {\n    template: '<div></div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('Identifier', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.name }}</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('Literal', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.raw }}</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ThisExpression', {\n    template: '<div class=\"header card grey\">this</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('BreakStatement', {\n    template: '<div class=\"header card grey\">break</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ContinueStatement', {\n    template: '<div class=\"header card grey\">continue</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ExpressionStatement', {\n    props: ['props'],\n    template: '<component v-else :is=\"props.expression.type\" :props=\"props.expression\"/>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('UpdateExpression', {\n    props: ['props'],\n    template: '<div>' + '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' + '<div class=\"header card chain red\">{{ props.operator }}</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('UnaryExpression', {\n    props: ['props'],\n    template: '<div>' + '<div class=\"header card chain-bottom red\">{{ props.operator }}</div>' + '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('MemberExpression', {\n    props: ['props'],\n    template: '<div>' + '<component :is=\"props.object.type\" :props=\"props.object\"/>' + '<component :is=\"props.property.type\" :props=\"props.property\" class=\"chain red\" :class=\"{computed: props.computed}\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('CallExpression', {\n    props: ['props'],\n    template: '<div>' + '<component v-if=\"this.isME()\" :is=\"props.callee.object.type\" :props=\"props.callee.object\"/>' + '<div class=\"header card blue\" :class=\"{ chain: isME()}\" >' +\n    // '<ExpressionStatement v-if=\"props.callee.type == \\'FunctionExpression\\'\" :props=\"props.callee\"></ExpressionStatement>' +\n    '<div >{{ this.getName() }}</div>' + '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' + '</div>' + '</div>',\n    methods: {\n        isME: function () {\n            return this.props.callee.type == 'MemberExpression';\n        },\n        isFE: function () {\n            return this.props.callee.type == 'FunctionExpression';\n        },\n        getName: function () {\n            return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name;\n        }\n    }\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('FunctionExpression', {\n    props: ['props'],\n    template: '<div class=\"card\" ><div class=\"header blue\"> <span class=\"scnd\">function</span> ' + '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' + '</div>' + '<div class=\"header amber\">' + '<BlockStatement :props=\"props.body\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('NewExpression', {\n    props: ['props'],\n    template: '<div>' + '<component is=\"props.callee.type\" v-if=\"this.isME()\" :props=\"props.callee.object\"/>' + '<div class=\"header card amber\" :class=\"{chain: this.isME()}\" ><span class=\"scnd\">new </span> {{ this.getName() }}' + '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' + '</div>' + '</div>',\n    methods: {\n        isME: function () {\n            return this.props.callee.type == 'MemberExpression';\n        },\n        getName: function () {\n            return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name;\n        }\n    }\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('BinaryExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' + '<component :is=\"props.left.type\" :props=\"props.left\"/>' + '<div class=\"infix\">' + ' <div class=\"line\"></div>' + ' <div class=\"circle\">{{ props.operator }}</div>' + ' <div class=\"line\"></div>' + '</div>' + '<component :is=\"props.right.type\" :props=\"props.right\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('LogicalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' + '<component :is=\"props.left.type\" :props=\"props.left\"/>' + '<div class=\"infix\">' + ' <div class=\"line\"></div>' + ' <div class=\"circle\">{{ props.operator }}</div>' + ' <div class=\"line\"></div>' + '</div>' + '<component :is=\"props.right.type\" :props=\"props.right\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ConditionalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card brown\">' + '<component :is=\"props.test.type\" :props=\"props.test\"/>' + '<div class=\"infix\">' + ' <div class=\"line\"></div>' + ' <div class=\"circle\">?</div>' + ' <div class=\"line\"></div>' + '</div>' + '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' + '<div class=\"infix\">' + ' <div class=\"line\"></div>' + ' <div class=\"circle\">:</div>' + ' <div class=\"line\"></div>' + '</div>' + '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('AssignmentExpression', {\n    props: ['props'],\n    template: '<div class=\"card\">' + '<component :is=\"props.left.type\" :props=\"props.left\"/>' + '<div class=\"assignment header grey\"> {{ props.operator }}' + '<component :is=\"props.right.type\" :props=\"props.right\"/>' + '</div></div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ForStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\">for' + '<component :is=\"props.init.type\" :props=\"props.init\"/>' + ' <div class=\"line\"></div>' + '<component :is=\"props.test.type\" :props=\"props.test\"/>' + ' <div class=\"line\"></div>' + '<component :is=\"props.update.type\" :props=\"props.update\"/>' + '</div>' + '<div class=\"header orange\">' + '<BlockStatement :props=\"props.body\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ReturnStatement', {\n    props: ['props'],\n    template: '<div class=\" header card grey\" > return ' + '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ForInStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> for' + '<component :is=\"props.left.type\" :props=\"props.left\"/>' + '<div class=\"infix\">' + ' <div class=\"line\"></div>' + ' <div class=\"circle small\">in</div>' + ' <div class=\"line\"></div>' + '</div>' + '<component :is=\"props.right.type\" :props=\"props.right\"/>' + '</div>' + '<div class=\"header orange\">' + '<BlockStatement :props=\"props.body\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('WhileStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> while' + '<component :is=\"props.test.type\" :props=\"props.test\"/>' + '</div>' + '<div class=\"header orange\">' + '<BlockStatement :props=\"props.body\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('IfStatement', {\n    props: ['props', 'hasElse'],\n    template: '<div class=\"card\">' + '<div class=\"header green\"> <span v-if=\"hasElse\">else </span> if' + '<component :is=\"props.test.type\" :props=\"props.test\"/>' + '</div>' + '<div class=\"header cyan\">' + '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' + '</div>' + '<div v-if=\"props.alternate\">' + '<IfStatement class=\"elseif\" v-if=\"props.alternate.type == \\'IfStatement\\'\" :props=\"props.alternate\" :hasElse=\"true\"/>' + '<div v-else class=\"header green\"> else' + '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' + '</div>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('SwitchStatement', {\n    props: ['props'],\n    template: '<div class=\"card\">' + '<div class=\"header\">switch' + '<component :is=\"props.discriminant.type\" :props=\"props.discriminant\"/>' + '</div>' + '<div v-for=\"c in props.cases\" class=\"dict-item\">' + '<div class=\"header grey\">case' + '<component :is=\"c.test.type\" :props=\"c.test\"/>' + '</div>' + '<BlockStatement class=\"header\" :props=\"{body: c.consequent}\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ArrayExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' + '<div class=\"header list-header\">Array</div>' + '<div v-for=\"e in props.elements\" class=\"list-item\">' + '<component :is=\"e.type\" :props=\"e\"/>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('ObjectExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' + '<div class=\"header\">Object</div>' + '<div v-for=\"p in props.properties\" class=\" dict-item\">' + '<div class=\"header grey\">' + '<span v-if=\"p.key.type == \\'Identifier\\'\">{{ p.key.name }}</span>' + '<span v-else>{{ p.key.raw }}</span>' + '</div>' + '<div class=\"header\">' + '<component :is=\"p.value.type\" :props=\"p.value\"/>' + '</div>' + '</div>' + '</div>'\n});\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].component('FunctionDeclaration', {\n    props: ['props'],\n    template: '<div class=\"card\">' + '<div class=\"header red\">' + '<span class=\"scnd\">function </span>{{ props.id.name }}' + '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' + '</div>' + '<BlockStatement class=\"header amber\" :props=\"props.body\"/>' + '</div>'\n});\n\nvar ast = acorn.parse('var x = 1');\n\nvar app = new __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n    el: '#main',\n    data: {\n        astBody: ast\n    },\n    template: '<div id=\"app\">' + '<BlockStatement :props=\"astBody\"></BlockStatement></div>',\n    methods: {\n        compile: function () {\n            var x = document.getElementById(\"code-editor\").value;\n            var ast = acorn.parse(x);\n            this.astBody = ast.body;\n        }\n    }\n});\n\nfunction checkTime(i) {\n    if (i < 10) {\n        i = \"0\" + i;\n    }\n    return i;\n}\n\nvar t;\nfunction startTime() {\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    // add a zero in front of numbers<10\n    m = checkTime(m);\n    document.getElementById('time').innerHTML = h + \":\" + m;\n    t = setTimeout(function () {\n        startTime();\n    }, 20 * 1000);\n}\nstartTime();\n\nvar editor = ace.edit(\"editor\");\neditor.$blockScrolling = Infinity;\neditor.on(\"input\", function () {\n    try {\n        app.$data.astBody = acorn.parse(editor.getValue());\n    } catch (error) {\n        console.log('error');\n    }\n});\neditor.setTheme(\"ace/theme/chrome\");\n\neditor.getSession().setMode(\"ace/mode/javascript\");\neditor.getSession().setUseWrapMode(true);\neditor.setValue('        for (var i = 1; i <= 20; i++) {\\n' + '    if (i % 15 == 0)\\n' + '        console.log(\"FizzBuzz\");\\n' + '    else if (i % 3 == 0)\\n' + '        console.log(\"Fizz\");\\n' + '    else if (i % 5 == 0)\\n' + '        console.log(\"Buzz\");\\n' + '    else\\n' + '        console.log(i);}', 1);\neditor.getSession().setUseWorker(false);\neditor.setHighlightActiveLine(false);\n\n/***/ })\n\n},[7]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.8c538101d67bffe6e5f9.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nconst acorn = require(\"acorn\");\nconst ace = require(\"brace\");\nrequire('brace/mode/javascript');\nrequire('brace/theme/chrome');\n\nVue.config.productionTip = false;\n\nVue.component('BlockStatement', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"node.type\" v-for=\"node in props.body\" :props=\"node\"/>' +\n    '</div>'\n});\n\nVue.component('VariableDeclaration', {\n    props: ['props'],\n    template: '<div>' +\n    '<div class=\"header card teal\" v-for=\"d in props.declarations\"><span class=\"scnd\">var </span>{{ d.id.name }} ' +\n    '<component :is=\"d.init.type\" :props=\"d.init\" v-if=\"d.init\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('EmptyStatement', {\n    template: '<div></div>'\n});\n\nVue.component('Identifier', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.name }}</div>'\n});\n\nVue.component('Literal', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.raw }}</div>'\n});\n\nVue.component('ThisExpression', {\n    template: '<div class=\"header card grey\">this</div>'\n});\n\nVue.component('BreakStatement', {\n    template: '<div class=\"header card grey\">break</div>'\n});\n\nVue.component('ContinueStatement', {\n    template: '<div class=\"header card grey\">continue</div>'\n});\n\nVue.component('ExpressionStatement', {\n    props: ['props'],\n    template: '<component v-else :is=\"props.expression.type\" :props=\"props.expression\"/>'\n});\n\nVue.component('UpdateExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '<div class=\"header card chain red\">{{ props.operator }}</div>' +\n    '</div>'\n});\n\n\nVue.component('UnaryExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<div class=\"header card chain-bottom red\">{{ props.operator }}</div>' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '</div>'\n});\n\nVue.component('MemberExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"props.object.type\" :props=\"props.object\"/>' +\n    '<component :is=\"props.property.type\" :props=\"props.property\" class=\"chain red\" :class=\"{computed: props.computed}\"/>' +\n    '</div>'\n});\n\nVue.component('CallExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component v-if=\"this.isME()\" :is=\"props.callee.object.type\" :props=\"props.callee.object\"/>' +\n    '<div class=\"header card blue\" :class=\"{ chain: isME()}\" >' +\n    // '<ExpressionStatement v-if=\"props.callee.type == \\'FunctionExpression\\'\" :props=\"props.callee\"></ExpressionStatement>' +\n    '<div >{{ this.getName() }}</div>' +\n    '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' +\n    '</div>' +\n    '</div>',\n    methods: {\n        isME: function () { return this.props.callee.type == 'MemberExpression'; },\n        isFE: function () { return this.props.callee.type == 'FunctionExpression'; },\n        getName: function () { return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name; }\n    }\n});\n\nVue.component('FunctionExpression', {\n    props: ['props'],\n    template: '<div class=\"card\" ><div class=\"header blue\"> <span class=\"scnd\">function</span> ' +\n    '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' +\n    '</div>' +\n    '<div class=\"header amber\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('NewExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component is=\"props.callee.type\" v-if=\"this.isME()\" :props=\"props.callee.object\"/>' +\n    '<div class=\"header card amber\" :class=\"{chain: this.isME()}\" ><span class=\"scnd\">new </span> {{ this.getName() }}' +\n    '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' +\n    '</div>' +\n    '</div>',\n    methods: {\n        isME: function () { return this.props.callee.type == 'MemberExpression'; },\n        getName: function () {\n            return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name;\n        }\n    }\n});\n\nVue.component('BinaryExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">{{ props.operator }}</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>'\n});\n\nVue.component('LogicalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">{{ props.operator }}</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>'\n});\n\nVue.component('ConditionalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card brown\">' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">?</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">:</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' +\n    '</div>'\n});\n\nVue.component('AssignmentExpression', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"assignment header grey\"> {{ props.operator }}' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div></div>'\n});\n\nVue.component('ForStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\">for' +\n    '<component :is=\"props.init.type\" :props=\"props.init\"/>' +\n    ' <div class=\"line\"></div>' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    ' <div class=\"line\"></div>' +\n    '<component :is=\"props.update.type\" :props=\"props.update\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ReturnStatement', {\n    props: ['props'],\n    template: '<div class=\" header card grey\" > return ' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '</div>'\n});\n\nVue.component('ForInStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> for' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle small\">in</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('WhileStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> while' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('IfStatement', {\n    props: ['props', 'hasElse'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header green\"> <span v-if=\"hasElse\">else </span> if' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '</div>' +\n    '<div class=\"header cyan\">' +\n    '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' +\n    '</div>' +\n    '<div v-if=\"props.alternate\">' +\n    '<IfStatement class=\"elseif\" v-if=\"props.alternate.type == \\'IfStatement\\'\" :props=\"props.alternate\" :hasElse=\"true\"/>' +\n    '<div v-else class=\"header green\"> else' +\n    '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' +\n    '</div>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('SwitchStatement', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header\">switch' +\n    '<component :is=\"props.discriminant.type\" :props=\"props.discriminant\"/>' +\n    '</div>' +\n    '<div v-for=\"c in props.cases\" class=\"dict-item\">' +\n    '<div class=\"header grey\">case' +\n    '<component :is=\"c.test.type\" :props=\"c.test\"/>' +\n    '</div>' +\n    '<BlockStatement class=\"header\" :props=\"{body: c.consequent}\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ArrayExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' +\n    '<div class=\"header list-header\">Array</div>' +\n    '<div v-for=\"e in props.elements\" class=\"list-item\">' +\n    '<component :is=\"e.type\" :props=\"e\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ObjectExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' +\n    '<div class=\"header\">Object</div>' +\n    '<div v-for=\"p in props.properties\" class=\" dict-item\">' +\n    '<div class=\"header grey\">' +\n    '<span v-if=\"p.key.type == \\'Identifier\\'\">{{ p.key.name }}</span>' +\n    '<span v-else>{{ p.key.raw }}</span>' +\n    '</div>' +\n    '<div class=\"header\">' +\n    '<component :is=\"p.value.type\" :props=\"p.value\"/>' +\n    '</div>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('FunctionDeclaration', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header red\">' +\n    '<span class=\"scnd\">function </span>{{ props.id.name }}' +\n    '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' +\n    '</div>' +\n    '<BlockStatement class=\"header amber\" :props=\"props.body\"/>' +\n    '</div>'\n});\n\nvar ast = acorn.parse('var x = 1');\n\nvar app = new Vue({\n    el: '#main',\n    data: {\n        astBody: ast\n    },\n    template: '<div id=\"app\">' +\n    '<BlockStatement :props=\"astBody\"></BlockStatement></div>',\n    methods: {\n        compile: function () {\n            var x = document.getElementById(\"code-editor\").value;\n            var ast = acorn.parse(x);\n            this.astBody = ast.body;\n        }\n    }\n});\n\nfunction checkTime(i) {\n    if (i < 10) {\n        i = \"0\" + i;\n    }\n    return i;\n}\n\nvar t;\nfunction startTime() {\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    // add a zero in front of numbers<10\n    m = checkTime(m);\n    document.getElementById('time').innerHTML = h + \":\" + m;\n    t = setTimeout(function () {\n        startTime();\n    }, 20 * 1000);\n}\nstartTime();\n\n\nvar editor = ace.edit(\"editor\");\neditor.$blockScrolling = Infinity;\neditor.on(\"input\", function () {\n    try {\n        app.$data.astBody = acorn.parse(editor.getValue());\n    } catch (error) {\n        console.log('error');\n    }\n});\neditor.setTheme(\"ace/theme/chrome\");\n\neditor.getSession().setMode(\"ace/mode/javascript\");\neditor.getSession().setUseWrapMode(true);\neditor.setValue(\n'        for (var i = 1; i <= 20; i++) {\\n' +\n'    if (i % 15 == 0)\\n' +\n'        console.log(\"FizzBuzz\");\\n' +\n'    else if (i % 3 == 0)\\n' +\n'        console.log(\"Fizz\");\\n' +\n'    else if (i % 5 == 0)\\n' +\n'        console.log(\"Buzz\");\\n' +\n'    else\\n' +\n'        console.log(i);}', 1);\neditor.getSession().setUseWorker(false);\neditor.setHighlightActiveLine(false);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}