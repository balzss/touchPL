{"version":3,"sources":["webpack:///./src/main.js"],"names":["acorn","require","ace","Vue","config","productionTip","component","props","template","methods","isME","callee","type","isFE","getName","property","name","ast","parse","app","el","data","astBody","compile","x","document","getElementById","value","body","checkTime","i","t","startTime","today","Date","h","getHours","m","getMinutes","innerHTML","setTimeout","editor","edit","$blockScrolling","Infinity","on","$data","getValue","error","console","log","setTheme","getSession","setMode","setUseWrapMode","setValue","setUseWorker","setHighlightActiveLine"],"mappings":"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","file":"static/js/app.9e3b218ad987edb9685c.js","sourcesContent":["// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nconst acorn = require(\"acorn\");\nconst ace = require(\"brace\");\nrequire('brace/mode/javascript');\nrequire('brace/theme/chrome');\n\nVue.config.productionTip = false;\n\nVue.component('BlockStatement', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"node.type\" v-for=\"node in props.body\" :props=\"node\"/>' +\n    '</div>'\n});\n\nVue.component('VariableDeclaration', {\n    props: ['props'],\n    template: '<div>' +\n    '<div class=\"header card teal\" v-for=\"d in props.declarations\"><span class=\"scnd\">var </span>{{ d.id.name }} ' +\n    '<component :is=\"d.init.type\" :props=\"d.init\" v-if=\"d.init\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('EmptyStatement', {\n    template: '<div></div>'\n});\n\nVue.component('Identifier', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.name }}</div>'\n});\n\nVue.component('Literal', {\n    props: ['props'],\n    template: '<div class=\"header card atom\">{{ props.raw }}</div>'\n});\n\nVue.component('ThisExpression', {\n    template: '<div class=\"header card grey\">this</div>'\n});\n\nVue.component('BreakStatement', {\n    template: '<div class=\"header card grey\">break</div>'\n});\n\nVue.component('ContinueStatement', {\n    template: '<div class=\"header card grey\">continue</div>'\n});\n\nVue.component('ExpressionStatement', {\n    props: ['props'],\n    template: '<component v-else :is=\"props.expression.type\" :props=\"props.expression\"/>'\n});\n\nVue.component('UpdateExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '<div class=\"header card chain red\">{{ props.operator }}</div>' +\n    '</div>'\n});\n\n\nVue.component('UnaryExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<div class=\"header card chain-bottom red\">{{ props.operator }}</div>' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '</div>'\n});\n\nVue.component('MemberExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component :is=\"props.object.type\" :props=\"props.object\"/>' +\n    '<component :is=\"props.property.type\" :props=\"props.property\" class=\"chain red\" :class=\"{computed: props.computed}\"/>' +\n    '</div>'\n});\n\nVue.component('CallExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component v-if=\"this.isME()\" :is=\"props.callee.object.type\" :props=\"props.callee.object\"/>' +\n    '<div class=\"header card blue\" :class=\"{ chain: isME()}\" >' +\n    // '<ExpressionStatement v-if=\"props.callee.type == \\'FunctionExpression\\'\" :props=\"props.callee\"></ExpressionStatement>' +\n    '<div >{{ this.getName() }}</div>' +\n    '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' +\n    '</div>' +\n    '</div>',\n    methods: {\n        isME: function () { return this.props.callee.type == 'MemberExpression'; },\n        isFE: function () { return this.props.callee.type == 'FunctionExpression'; },\n        getName: function () { return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name; }\n    }\n});\n\nVue.component('FunctionExpression', {\n    props: ['props'],\n    template: '<div class=\"card\" ><div class=\"header blue\"> <span class=\"scnd\">function</span> ' +\n    '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' +\n    '</div>' +\n    '<div class=\"header amber\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('NewExpression', {\n    props: ['props'],\n    template: '<div>' +\n    '<component is=\"props.callee.type\" v-if=\"this.isME()\" :props=\"props.callee.object\"/>' +\n    '<div class=\"header card amber\" :class=\"{chain: this.isME()}\" ><span class=\"scnd\">new </span> {{ this.getName() }}' +\n    '<component :is=\"a.type\" v-for=\"a in props.arguments\" :props=\"a\"/>' +\n    '</div>' +\n    '</div>',\n    methods: {\n        isME: function () { return this.props.callee.type == 'MemberExpression'; },\n        getName: function () {\n            return this.props.callee.type == 'MemberExpression' ? this.props.callee.property.name : this.props.callee.name;\n        }\n    }\n});\n\nVue.component('BinaryExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">{{ props.operator }}</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>'\n});\n\nVue.component('LogicalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card purple\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">{{ props.operator }}</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>'\n});\n\nVue.component('ConditionalExpression', {\n    props: ['props'],\n    template: '<div class=\"header card brown\">' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">?</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle\">:</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' +\n    '</div>'\n});\n\nVue.component('AssignmentExpression', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"assignment header grey\"> {{ props.operator }}' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div></div>'\n});\n\nVue.component('ForStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\">for' +\n    '<component :is=\"props.init.type\" :props=\"props.init\"/>' +\n    ' <div class=\"line\"></div>' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    ' <div class=\"line\"></div>' +\n    '<component :is=\"props.update.type\" :props=\"props.update\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ReturnStatement', {\n    props: ['props'],\n    template: '<div class=\" header card grey\" > return ' +\n    '<component :is=\"props.argument.type\" :props=\"props.argument\"/>' +\n    '</div>'\n});\n\nVue.component('ForInStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> for' +\n    '<component :is=\"props.left.type\" :props=\"props.left\"/>' +\n    '<div class=\"infix\">' +\n    ' <div class=\"line\"></div>' +\n    ' <div class=\"circle small\">in</div>' +\n    ' <div class=\"line\"></div>' +\n    '</div>' +\n    '<component :is=\"props.right.type\" :props=\"props.right\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('WhileStatement', {\n    props: ['props'],\n    template: '<div class=\"card\"><div class=\"header brown\"> while' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '</div>' +\n    '<div class=\"header orange\">' +\n    '<BlockStatement :props=\"props.body\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('IfStatement', {\n    props: ['props', 'hasElse'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header green\"> <span v-if=\"hasElse\">else </span> if' +\n    '<component :is=\"props.test.type\" :props=\"props.test\"/>' +\n    '</div>' +\n    '<div class=\"header cyan\">' +\n    '<component :is=\"props.consequent.type\" :props=\"props.consequent\"/>' +\n    '</div>' +\n    '<div v-if=\"props.alternate\">' +\n    '<IfStatement class=\"elseif\" v-if=\"props.alternate.type == \\'IfStatement\\'\" :props=\"props.alternate\" :hasElse=\"true\"/>' +\n    '<div v-else class=\"header green\"> else' +\n    '<component :is=\"props.alternate.type\" :props=\"props.alternate\"/>' +\n    '</div>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('SwitchStatement', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header\">switch' +\n    '<component :is=\"props.discriminant.type\" :props=\"props.discriminant\"/>' +\n    '</div>' +\n    '<div v-for=\"c in props.cases\" class=\"dict-item\">' +\n    '<div class=\"header grey\">case' +\n    '<component :is=\"c.test.type\" :props=\"c.test\"/>' +\n    '</div>' +\n    '<BlockStatement class=\"header\" :props=\"{body: c.consequent}\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ArrayExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' +\n    '<div class=\"header list-header\">Array</div>' +\n    '<div v-for=\"e in props.elements\" class=\"list-item\">' +\n    '<component :is=\"e.type\" :props=\"e\"/>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('ObjectExpression', {\n    props: ['props'],\n    template: '<div class=\"card list\">' +\n    '<div class=\"header\">Object</div>' +\n    '<div v-for=\"p in props.properties\" class=\" dict-item\">' +\n    '<div class=\"header grey\">' +\n    '<span v-if=\"p.key.type == \\'Identifier\\'\">{{ p.key.name }}</span>' +\n    '<span v-else>{{ p.key.raw }}</span>' +\n    '</div>' +\n    '<div class=\"header\">' +\n    '<component :is=\"p.value.type\" :props=\"p.value\"/>' +\n    '</div>' +\n    '</div>' +\n    '</div>'\n});\n\nVue.component('FunctionDeclaration', {\n    props: ['props'],\n    template: '<div class=\"card\">' +\n    '<div class=\"header red\">' +\n    '<span class=\"scnd\">function </span>{{ props.id.name }}' +\n    '<div v-for=\"p in props.params\" class=\" grey header card\"> {{ p.name }} </div>' +\n    '</div>' +\n    '<BlockStatement class=\"header amber\" :props=\"props.body\"/>' +\n    '</div>'\n});\n\nvar ast = acorn.parse('var x = 1');\n\nvar app = new Vue({\n    el: '#main',\n    data: {\n        astBody: ast\n    },\n    template: '<div id=\"app\">' +\n    '<BlockStatement :props=\"astBody\"></BlockStatement></div>',\n    methods: {\n        compile: function () {\n            var x = document.getElementById(\"code-editor\").value;\n            var ast = acorn.parse(x);\n            this.astBody = ast.body;\n        }\n    }\n});\n\nfunction checkTime(i) {\n    if (i < 10) {\n        i = \"0\" + i;\n    }\n    return i;\n}\n\nvar t;\nfunction startTime() {\n    var today = new Date();\n    var h = today.getHours();\n    var m = today.getMinutes();\n    // add a zero in front of numbers<10\n    m = checkTime(m);\n    document.getElementById('time').innerHTML = h + \":\" + m;\n    t = setTimeout(function () {\n        startTime();\n    }, 20 * 1000);\n}\nstartTime();\n\n\nvar editor = ace.edit(\"editor\");\neditor.$blockScrolling = Infinity;\neditor.on(\"input\", function () {\n    try {\n        app.$data.astBody = acorn.parse(editor.getValue());\n    } catch (error) {\n        console.log('error');\n    }\n});\neditor.setTheme(\"ace/theme/chrome\");\n\neditor.getSession().setMode(\"ace/mode/javascript\");\neditor.getSession().setUseWrapMode(true);\neditor.setValue(`for (var i = 1; i <= 20; i++) {\n    if (i % 15 == 0)\n        console.log(\"FizzBuzz\");\n    else if (i % 3 == 0)\n        console.log(\"Fizz\");\n    else if (i % 5 == 0)\n        console.log(\"Buzz\");\n    else\n        console.log(i);\n}`, 1);\neditor.getSession().setUseWorker(false);\neditor.setHighlightActiveLine(false);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}